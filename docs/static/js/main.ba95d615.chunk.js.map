{"version":3,"sources":["types/types.js","reducers/authReducer.js","reducers/calendarReducer.js","reducers/uiReducer.js","reducers/rootReducer.js","store/store.js","helpers/fetch.js","helpers/prepareEvents.js","actions/events.js","actions/auth.js","components/ui/Navbar.js","helpers/calendar-messages-es.js","components/calendar/CalendarEvent.js","actions/ui.js","components/calendar/CalendarModal.js","components/ui/AddNewFab.js","components/ui/DeleteEventFab.js","components/calendar/CalendarScreen.js","hooks/useForm.js","components/auth/LoginScreen.js","router/PublicRoute.js","router/PrivateRoute.js","router/AppRouter.js","CalendarApp.js","index.js"],"names":["types","initialState","checking","events","activeEvent","modalOpen","rootReducer","combineReducers","ui","state","action","type","calendar","payload","map","e","id","filter","auth","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","baseUrl","process","fetchSinToken","endpoint","data","method","url","fetch","headers","body","JSON","stringify","fetchConToken","token","localStorage","getItem","prepareEvents","end","moment","toDate","start","eventAddNew","event","eventClearActiveEvent","eventUpdated","eventDeleted","eventLoaded","checkingFinish","login","user","startLogout","dispatch","clear","logout","Navbar","useDispatch","name","useSelector","className","onClick","messages","allDay","previous","next","today","month","week","day","agenda","date","time","noEventsInRange","showMore","total","CalendarEvent","title","uiOpenModal","customStyles","content","top","left","right","bottom","marginRight","transform","Modal","setAppElement","now","minutes","seconds","add","nowPlus1","clone","initEvent","notes","CalendarModal","useState","dateStart","setDateStart","dateEnd","setDateEnd","titleValid","setTitleValid","formValues","setFormValues","useEffect","handleInputChange","target","value","closeModal","isOpen","onRequestClose","style","closeTimeoutMS","overlayClassName","onSubmit","preventDefault","momentStart","momentEnd","isSameOrAfter","Swal","fire","trim","length","a","resp","json","ok","msg","console","log","eventStartUpdate","getState","uid","evento","_id","eventStartAddNew","onChange","minDate","placeholder","autoComplete","rows","AddNewFab","DeleteEventFab","locale","localizer","momentLocalizer","CalendarScreen","lastView","setlastView","eventos","startAccessor","endAccessor","eventPropGetter","isSelected","backgroundColor","borderRadius","opacity","display","color","onDoubleClickEvent","onSelectEvent","eventSetActive","onView","setItem","onSelectSlot","selectable","view","components","useForm","values","setValues","reset","LoginScreen","lEmail","lPassword","formLoginvalues","handleLoginInputChange","rName","rEmail","rPassword1","rPassword2","formRegistervalues","handleRegisterInputChange","email","password","Date","getTime","PublicRoute","isAuthenticated","Component","component","rest","props","to","PrivateRoute","location","pathname","AppRouter","exact","path","CalendarApp","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ba95d615.chunk.js","sourcesContent":["export const types={\n    uiOpenModal:'[ui] Open modal',\n    uiCloseModal: '[ui] Close modal',\n\n    eventSetActive: '[event] Set Active',\n    eventLogout: '[event] Logout event',\n    eventStartAddNew: '[event] Start add new',\n    eventAddNew: '[event] Add new',\n    eventClearActiveEvent: '[event] Clear active event',\n    eventUpdated: '[event] Event updated',\n    eventDeleted: '[event] Event deleted',\n    eventLoaded: '[event] Events Loaded',\n\n    // authCheking: '[auth] Checking login state',\n    authChekingFinish: '[auth] Finish checking login state',\n    authStartLogin: '[auth] Start login',\n    authLogin: '[auth] Login',\n    authStartRegister: '[auth] Start register',\n    authStartTokenRenew: '[auth] Start token renew',\n    authLogout: '[auth] Logout'\n}","import { types } from \"../types/types\";\n\nconst initialState={\n    checking:true\n}\n\nexport const authReducer=(state=initialState,action)=>{\n    switch (action.type) {\n        case types.authLogin:\n            return {\n                ...state,                \n                ...action.payload,\n                checking: false\n            };\n        case types.authChekingFinish:\n        return {\n            ...state,           \n            checking: false\n        };\n        case types.authLogout:\n        return {                       \n            checking: false\n        };\n        \n        default:\n            return state;\n    }\n}","import moment from 'moment';\nimport { types } from '../types/types';\n\n// {\n//     id: new Date().getTime(),\n//     title: 'Cumpleaños del jefazo',\n//     start: moment().toDate(),\n//     end: moment().add(2,'hours').toDate(),\n//     bgcolor: '#fafafa',\n//     notes: 'Comprar el pastel',\n//     user:{\n//         _id: '123',\n//         name: 'Jesus Miguel Adrian Matos'\n//     }\n// }\n\n\nconst initialState={\n    events:[],\n    activeEvent: null\n};\n\nexport const calendarReducer=(state=initialState,action)=>{\n    switch (action.type) {\n           case types.eventSetActive:\n               return {\n                ...state,\n                activeEvent: action.payload\n               };\n        case types.eventAddNew:\n        return {\n        ...state,\n        events: [\n            ...state.events,\n            action.payload\n        ]\n        };\n        case types.eventClearActiveEvent:\n        return {\n            ...state,\n            activeEvent: null\n        };\n        case types.eventUpdated:\n        return{\n            ...state,\n            events: state.events.map(\n                e=>(e.id===action.payload.id)?action.payload:e\n            )\n        };\n        case types.eventDeleted:\n        return{\n            ...state,\n            events: state.events.filter(\n                e=>(e.id!==state.activeEvent.id)\n            ),\n            activeEvent: null\n        };\n        case types.eventLoaded:\n            return{\n                ...state,\n                events:[\n                    ...action.payload\n                ]\n            };\n        case types.eventLogout:\n            return{\n                ...initialState\n            };\n        default:\n            return state;\n    }\n}","import { types } from \"../types/types\"\n\nconst initialState={\n    modalOpen:false\n}\n\nexport const uiReducer=(state=initialState,action)=>{\n    switch (action.type) {\n        case types.uiOpenModal:            \n            return{\n                ...state,\n                modalOpen: true\n            };\n    \n        case types.uiCloseModal:            \n            return{\n                ...state,\n                modalOpen: false\n            };\n        default:\n            return state;\n    }\n}","import {combineReducers} from 'redux';\nimport { authReducer } from './authReducer';\nimport { calendarReducer } from './calendarReducer';\nimport {uiReducer} from './uiReducer'\n\nexport const rootReducer=combineReducers({\n    ui:uiReducer,    \n    calendar: calendarReducer,\n    auth: authReducer\n})","import {createStore,compose, applyMiddleware} from 'redux';\nimport thunk from 'redux-thunk';\nimport { rootReducer } from '../reducers/rootReducer';\n\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\n\nexport const store = createStore(\n    rootReducer,\n    composeEnhancers(\n        applyMiddleware(thunk)\n    )\n);","const baseUrl=process.env.REACT_APP_API_URL;\n\nconst fetchSinToken=(endpoint,data,method='GET')=>{\n    const url=`${baseUrl}/${endpoint}`;\n    if(method==='GET'){\n        return fetch(url);\n    }else{\n        return fetch(url,{\n            method,\n            headers:{\n                'Content-type': 'application/json'\n            },\n            body: JSON.stringify(data)\n        });\n    }\n}\n\nconst fetchConToken=(endpoint,data,method='GET')=>{\n    const url=`${baseUrl}/${endpoint}`;\n    const token=localStorage.getItem('token') || '';\n    if(method==='GET'){\n        return fetch(url,{\n            method,\n            headers:{\n                'x-token':token\n            }\n        });\n    }else{\n        return fetch(url,{\n            method,\n            headers:{\n                'Content-type': 'application/json',\n                'x-token':token\n            },\n            body: JSON.stringify(data)\n        });\n    }\n}\n\nexport {\n    fetchSinToken,\n    fetchConToken\n}","import moment from 'moment';\nexport const prepareEvents=(events=[])=>{\n    return events.map(\n        (e)=>({\n            ...e,\n            end:moment(e.end).toDate(),\n            start:moment(e.start).toDate()\n        })\n    );\n}","import Swal from \"sweetalert2\";\nimport { fetchConToken } from \"../helpers/fetch\";\nimport { prepareEvents } from \"../helpers/prepareEvents\";\nimport { types } from \"../types/types\";\n\n\nexport const eventStartAddNew=(event)=>{\n    return async(dispatch,getState)=>{\n        const {uid,name}=getState().auth;\n        try{\n            const resp=await fetchConToken('events',event,'POST');\n            const body=await resp.json();\n            if(body.ok){\n                event.id=body.evento.id;\n                event.user={\n                    _id: uid,\n                    name: name\n                }\n                dispatch(eventAddNew(event));\n            }\n        }catch(error){\n            console.log(error);\n        }\n    }\n}\n\n\n\nconst eventAddNew=(event)=>({\n    type: types.eventAddNew,\n    payload: event\n});\n\nexport const eventSetActive=(event)=>({\n    type: types.eventSetActive,\n    payload: event\n});\n\nexport const eventClearActiveEvent=()=>({\n    type: types.eventClearActiveEvent\n});\n\nexport const eventStartUpdate=(event)=>{\n    return async(dispatch)=>{\n        try{\n            const resp=await fetchConToken(`events/${event.id}`,event,'PUT');\n            const body=await resp.json();\n            if(body.ok){\n                dispatch(eventUpdated(event));\n            }else{\n                Swal.fire('Error',body.msg,'error');\n            }\n        }catch(error){\n            console.log(error);\n        }\n    }\n}\n\nconst eventUpdated=(event)=>({\n    type: types.eventUpdated,\n    payload: event\n});\n\nexport const eventStartDelete=()=>{\n    return async(dispatch,getState)=>{\n        const {id}=getState().calendar.activeEvent;\n        try{\n            const resp=await fetchConToken(`events/${id}`,{},'DELETE');\n            const body=await resp.json();\n            if(body.ok){\n                dispatch(eventDeleted());\n            }else{\n                Swal.fire('Error',body.msg,'error');\n            }\n        }catch(error){\n            console.log(error);\n        }\n    }\n}\n\nconst eventDeleted=()=>({\n    type: types.eventDeleted\n});\n\nexport const eventStartLoading=()=>{\n    return async(dispatch)=>{\n        try{\n            const resp=await fetchConToken('events');\n            const body=await resp.json();\n            const events=prepareEvents(body.eventos);\n            dispatch(eventLoaded(events));\n        }catch(error){\n            console.log(error);\n        }\n    }\n}\n\nconst eventLoaded=(events)=>({\n    type:types.eventLoaded,\n    payload: events\n});\n\nexport const eventLogout=()=>({\n    type:types.eventLogout\n});","import Swal from \"sweetalert2\";\nimport { fetchConToken, fetchSinToken } from \"../helpers/fetch\";\nimport { types } from \"../types/types\";\nimport { eventLogout } from \"./events\";\n\nexport const startLogin=(email,password)=>{\n    return async(dispatch)=>{\n        const resp=await fetchSinToken('auth',{email,password},'POST');\n        const body=await resp.json();\n        if(body.ok){\n            localStorage.setItem('token',body.token);\n            localStorage.setItem('token-init-date', new Date().getTime());\n            dispatch(login({\n                uid: body.uid,\n                name: body.name\n            }))\n        }else{\n            Swal.fire('Error',body.msg,'error');\n        }\n    }\n}\n\nexport const startRegister=(email,password,name)=>{\n    return async(dispatch)=>{\n        const resp=await fetchSinToken('auth/new',{name,email,password},'POST');\n        const body=await resp.json();\n        if(body.ok){\n            localStorage.setItem('token',body.token);\n            localStorage.setItem('token-init-date', new Date().getTime());\n            dispatch(login({\n                uid: body.uid,\n                name: body.name\n            }))\n        }else{\n            Swal.fire('Error',body.msg,'error');\n        }\n    }\n}\n\nexport const startChecking=()=>{\n    return async(dispatch)=>{\n        const resp=await fetchConToken('auth/renew');\n        const body=await resp.json();\n        if(body.ok){\n            localStorage.setItem('token',body.token);\n            localStorage.setItem('token-init-date', new Date().getTime());\n            dispatch(login({\n                uid: body.uid,\n                name: body.name\n            }))\n        }else{            \n            dispatch(checkingFinish());\n        }\n    }\n}\n\nconst checkingFinish=()=>({\n    type:types.authChekingFinish\n});\n\nconst login=(user)=>({\n    type: types.authLogin,\n    payload:user\n});\n\nexport const startLogout=()=>{\n    return (dispatch)=>{\n        localStorage.clear();\n        dispatch(eventLogout());\n        dispatch(logout());\n    }\n}\n\nconst logout=()=>({\n    type:types.authLogout\n});","import React from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { startLogout } from '../../actions/auth';\n\nexport const Navbar = () => {\n    const dispatch = useDispatch();\n    const {name} = useSelector(state => state.auth);\n\n    const handleLogout=()=>{\n        dispatch(startLogout());\n    }\n    return (\n        <div className=\"navbar navbar-dark bg-dark mb-4\">\n            <span className=\"navbar-brand\">\n                {name}\n            </span>\n            <button \n                className=\"btn btn-outline-danger\"\n                onClick={handleLogout}\n            >\n                <i className=\"fas fa-sign-out-alt\"></i>\n                <span> Salir</span>\n            </button>\n        </div>\n    )\n}\n","export const messages = {\n    allDay: 'Todo el día',\n    previous: '<',\n    next: '>',\n    today: 'Hoy',\n    month: 'Mes',\n    week: 'Semana',\n    day: 'Día',\n    agenda: 'Agenda',\n    date: 'Fecha',\n    time: 'Hora',\n    event: 'Evento',\n    noEventsInRange: 'No hay eventos en este rango',\n    showMore: total => `+ Ver más (${total})`\n};","import React from 'react'\n\nexport const CalendarEvent = ({event}) => {\n    const {title,user}=event;\n    return (\n        <div>\n            <span>{ title }</span>\n            <strong> - { user.name }</strong>\n        </div>\n    )\n}\n","import { types } from \"../types/types\";\n\nexport const uiOpenModal=()=>({\n    type: types.uiOpenModal\n});\n\nexport const uiCloseModal=()=>({\n    type: types.uiCloseModal\n});","import React, { useEffect, useState } from 'react';\nimport Modal from 'react-modal';\nimport moment from 'moment'\nimport DateTimePicker from 'react-datetime-picker';\nimport Swal from 'sweetalert2';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { uiCloseModal } from '../../actions/ui';\nimport { eventStartAddNew, eventClearActiveEvent, eventStartUpdate } from '../../actions/events';\n\nconst customStyles = {\n    content : {\n      top                   : '50%',\n      left                  : '50%',\n      right                 : 'auto',\n      bottom                : 'auto',\n      marginRight           : '-50%',\n      transform             : 'translate(-50%, -50%)'\n    }\n  };\n\nModal.setAppElement('#root');\nconst now=moment().minutes(0).seconds(0).add(1,'hours');\nconst nowPlus1=now.clone().add(1,'hours');\n\nconst initEvent={\n    title:'',\n    notes:'',\n    start:now.toDate(),\n    end:nowPlus1.toDate()\n};\n\nexport const CalendarModal = () => {\n\n    const {modalOpen} = useSelector(state => state.ui);\n    const {activeEvent} = useSelector(state => state.calendar)\n    const dispatch = useDispatch();\n    const [dateStart, setDateStart] = useState(now.toDate());\n    const [dateEnd, setDateEnd] = useState(nowPlus1.toDate());\n    const [titleValid, setTitleValid] = useState(true);\n\n    const [formValues, setFormValues] = useState(initEvent);\n\n    const {notes,title,start,end}=formValues;\n\n    useEffect(() => {\n        if(activeEvent){\n            setFormValues(activeEvent);\n        }else{\n            setFormValues(initEvent);\n        }        \n    }, [activeEvent,setFormValues])\n\n    const handleInputChange=({target})=>{\n        setFormValues({\n            ...formValues,\n            [target.name]: target.value\n        });\n    }\n\n    const closeModal=()=>{        \n        dispatch(uiCloseModal());\n        dispatch(eventClearActiveEvent());\n        setFormValues(initEvent);\n    }\n    const handleStartDateChange=(event)=>{\n        setDateStart(event);\n        setFormValues({\n            ...formValues,\n            start: event\n        });\n    }\n\n    const handleEndDateChange=(event)=>{\n        setDateEnd(event);\n        setFormValues({\n            ...formValues,\n            end: event\n        });\n    }\n\n    const handleSubmitForm=(event)=>{\n        event.preventDefault();\n        const momentStart=moment(start);\n        const momentEnd=moment(end);\n        if(momentStart.isSameOrAfter(momentEnd)){            \n            return Swal.fire('Error','La fecha fin debe de ser mayor a la fecha de inicio','error');\n        }\n        if(title.trim().length<2){\n            return setTitleValid(false);\n        }\n        \n        if(activeEvent){\n            dispatch(eventStartUpdate(formValues));\n        }else{\n            dispatch(eventStartAddNew(formValues));\n        }\n        setTitleValid(true);\n        closeModal();\n    }\n\n    return (\n        <Modal\n          isOpen={modalOpen}\n        //   onAfterOpen={afterOpenModal}\n          onRequestClose={closeModal}\n          style={customStyles}\n          closeTimeoutMS={200}\n        //   contentLabel=\"Example Modal\"\n        className=\"modal\"\n        overlayClassName=\"modal-fondo\"\n        >\n            <h1> {(activeEvent)?'Editar evento':'Nuevo evento'} </h1>\n            <hr />\n            <form \n                onSubmit={handleSubmitForm}\n                className=\"container\"\n            >\n\n                <div className=\"form-group\">\n                    <label>Fecha y hora inicio</label>\n                    <DateTimePicker\n                        onChange={handleStartDateChange}\n                        value={dateStart}\n                        className=\"form-control\"\n                    />\n                </div>\n\n                <div className=\"form-group\">\n                    <label>Fecha y hora fin</label>\n                    <DateTimePicker\n                        onChange={handleEndDateChange}\n                        value={dateEnd}\n                        minDate={dateStart}\n                        className=\"form-control\"\n                    />\n                </div>\n\n                <hr />\n                <div className=\"form-group\">\n                    <label>Titulo y notas</label>\n                    <input \n                        type=\"text\" \n                        className={`form-control ${!titleValid && 'is-invalid'}`}\n                        placeholder=\"Título del evento\"\n                        name=\"title\"\n                        autoComplete=\"off\"\n                        value={title}\n                        onChange={handleInputChange}\n                    />\n                    <small id=\"emailHelp\" className=\"form-text text-muted\">Una descripción corta</small>\n                </div>\n\n                <div className=\"form-group\">\n                    <textarea \n                        type=\"text\" \n                        className=\"form-control\"\n                        placeholder=\"Notas\"\n                        rows=\"5\"\n                        name=\"notes\"\n                        value={notes}\n                        onChange={handleInputChange}\n                    ></textarea>\n                    <small id=\"emailHelp\" className=\"form-text text-muted\">Información adicional</small>\n                </div>\n\n                <button\n                    type=\"submit\"\n                    className=\"btn btn-outline-primary btn-block\"\n                >\n                    <i className=\"far fa-save\"></i>\n                    <span> Guardar</span>\n                </button>\n\n            </form>\n        </Modal>\n    )\n}\n","import React from 'react'\nimport { useDispatch } from 'react-redux'\nimport { uiOpenModal } from '../../actions/ui';\n\nexport const AddNewFab = () => {\n    const dispatch = useDispatch();\n    const handleClickNew=()=>{\n        dispatch(uiOpenModal());\n    }\n    return (\n        <button\n            onClick={handleClickNew}\n            className=\"btn btn-primary fab\"\n        >\n            <i className=\"fas fa-plus\"></i>\n        </button>\n    )\n}\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { eventStartDelete } from '../../actions/events';\n\nexport const DeleteEventFab = () => { \n    const dispatch = useDispatch();\n    const hanbleDelete=()=>{\n        dispatch(eventStartDelete());\n    }   \n    return (        \n        <button\n            className=\"btn btn-danger fab-danger\"\n            onClick={hanbleDelete}\n        >\n            <i className=\"fas fa-trash\"></i>\n            <span> Borrar evento</span>\n        </button>\n    )\n}\n","import React, { useEffect, useState } from 'react';\nimport { Calendar, momentLocalizer } from 'react-big-calendar';\nimport moment from 'moment';\nimport { Navbar } from '../ui/Navbar';\nimport { messages } from '../../helpers/calendar-messages-es';\nimport { CalendarEvent } from './CalendarEvent';\nimport { CalendarModal } from './CalendarModal';\n\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\nimport 'moment/locale/es';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { uiOpenModal } from '../../actions/ui';\nimport { eventClearActiveEvent, eventSetActive, eventStartLoading } from '../../actions/events';\nimport { AddNewFab } from '../ui/AddNewFab';\nimport {DeleteEventFab} from '../ui/DeleteEventFab';\n\nmoment.locale('es');\nconst localizer = momentLocalizer(moment);\n\nexport const CalendarScreen = () => {\n\n    const dispatch = useDispatch();     \n    const [lastView, setlastView] = useState(localStorage.getItem('lastView') || 'month');\n    const {events,activeEvent} = useSelector(state => state.calendar); \n    const {uid} = useSelector(state => state.auth);\n\n    useEffect(() => {\n        dispatch(eventStartLoading());        \n    }, [dispatch])\n    \n    const onDoubleClick=()=>{        \n        dispatch(uiOpenModal());\n    }\n\n    const onSelectEvent=(event)=>{        \n        dispatch(eventSetActive(event));        \n    }\n\n    const onViewChange=(event)=>{\n        setlastView(event);\n        localStorage.setItem('lastView',event);\n    }  \n    \n    const onSelectSlot=(e)=>{\n        dispatch(eventClearActiveEvent());\n    }\n\n    const eventStyleGetter=(event,start,end,isSelected)=>{               \n        const style={\n            backgroundColor: (uid===event.user._id)?'#367CF7':'#465660',\n            borderRadius: '0px',\n            opacity: 0.8,\n            display: 'block',\n            color: 'white'            \n        }\n        return {\n            style\n        }\n    };\n    return (\n        <div className=\"calendar-screen\">\n            <Navbar />\n            <Calendar\n                localizer={localizer}\n                events={events}\n                startAccessor=\"start\"\n                endAccessor=\"end\" \n                messages={messages} \n                eventPropGetter={eventStyleGetter} \n                onDoubleClickEvent={onDoubleClick}  \n                onSelectEvent={onSelectEvent} \n                onView={onViewChange}\n                onSelectSlot={onSelectSlot}\n                selectable={true}\n                view={lastView}\n                components={{\n                    event: CalendarEvent\n                }}          \n            />\n            <AddNewFab />\n            {\n                (activeEvent) && <DeleteEventFab />\n            }            \n            \n            <CalendarModal />\n        </div>\n    )\n}\n","import { useState } from \"react\";\n\nexport const useForm = (initialState={}) => {\n    const [values, setValues] = useState(initialState);\n    const reset=()=>{\n        setValues(initialState);\n    }\n    const handleInputChange=({target})=>{\n        setValues({\n            ...values,\n            [target.name]:target.value\n        });\n    }\n    return [values,handleInputChange,reset];\n}","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport Swal from 'sweetalert2';\nimport { startLogin, startRegister } from '../../actions/auth';\nimport {useForm} from '../../hooks/useForm';\nimport './login.css';\n\nexport const LoginScreen = () => {\n\n    const [formLoginvalues,handleLoginInputChange] = useForm({\n        lEmail:'elbuho12@outlook.com',\n        lPassword: 'jandm180217'\n    });\n\n    const [formRegistervalues,handleRegisterInputChange] = useForm({\n        rName:'Margot Maria Torres Escobar',\n        rEmail:'mako9@hotmail.com',\n        rPassword1: 'jandm180217',\n        rPassword2: 'jandm180217'\n    });\n\n    const {rName,rEmail,rPassword1,rPassword2}=formRegistervalues;\n\n    const {lEmail,lPassword}=formLoginvalues;\n    const dispatch = useDispatch();\n    const handleLogin=(event)=>{\n        event.preventDefault();\n        dispatch(startLogin(lEmail,lPassword));        \n    }\n    const handleRegister=(event)=>{\n        event.preventDefault();\n        if(rPassword1!==rPassword2){\n            return Swal.fire('Error','Las contraseñas deben de ser iguales','error');\n        }\n        dispatch(startRegister(rEmail,rPassword1,rName));\n    }\n    return (\n        <div className=\"container login-container\">\n            <div className=\"row\">\n                <div className=\"col-md-6 login-form-1\">\n                    <h3>Ingreso</h3>\n                    <form onSubmit={handleLogin}>\n                        <div className=\"form-group\">\n                            <input \n                                type=\"text\"\n                                className=\"form-control\"\n                                placeholder=\"Correo\"\n                                name=\"lEmail\"\n                                value={lEmail}\n                                onChange={handleLoginInputChange}\n                            />\n                        </div>\n                        <div className=\"form-group\">\n                            <input\n                                type=\"password\"\n                                className=\"form-control\"\n                                placeholder=\"Contraseña\"\n                                name=\"lPassword\"\n                                value={lPassword}\n                                onChange={handleLoginInputChange}\n                            />\n                        </div>\n                        <div className=\"form-group\">\n                            <input \n                                type=\"submit\"\n                                className=\"btnSubmit\"\n                                value=\"Login\" \n                            />\n                        </div>\n                    </form>\n                </div>\n\n                <div className=\"col-md-6 login-form-2\">\n                    <h3>Registro</h3>\n                    <form onSubmit={handleRegister}>\n                        <div className=\"form-group\">\n                            <input\n                                type=\"text\"\n                                className=\"form-control\"\n                                placeholder=\"Nombre\"\n                                name=\"rName\"\n                                value={rName}\n                                onChange={handleRegisterInputChange}\n                            />\n                        </div>\n                        <div className=\"form-group\">\n                            <input\n                                type=\"email\"\n                                className=\"form-control\"\n                                placeholder=\"Correo\"\n                                name=\"rEmail\"\n                                value={rEmail}\n                                onChange={handleRegisterInputChange}\n                            />\n                        </div>\n                        <div className=\"form-group\">\n                            <input\n                                type=\"password\"\n                                className=\"form-control\"\n                                placeholder=\"Contraseña\" \n                                name=\"rPassword1\"\n                                value={rPassword1}\n                                onChange={handleRegisterInputChange}\n                            />\n                        </div>\n\n                        <div className=\"form-group\">\n                            <input\n                                type=\"password\"\n                                className=\"form-control\"\n                                placeholder=\"Repita la contraseña\" \n                                name=\"rPassword2\"\n                                value={rPassword2}\n                                onChange={handleRegisterInputChange}\n                            />\n                        </div>\n\n                        <div className=\"form-group\">\n                            <input \n                                type=\"submit\" \n                                className=\"btnSubmit\" \n                                value=\"Crear cuenta\" />\n                        </div>\n                    </form>\n                </div>\n            </div>\n        </div>\n    )\n}","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Redirect, Route } from 'react-router-dom';\n\nexport const PublicRoute = ({\n    isAuthenticated,\n    component:Component,\n    ...rest\n}) => {\n    return (\n        <Route {...rest}\n            component={\n                (props)=>(\n                    (isAuthenticated)\n                    ? <Redirect to=\"/\" />\n                    : <Component {...props} />\n                )\n            }\n        \n        />\n    )\n}\n\nPublicRoute.propTypes={\n    isAuthenticated: PropTypes.bool.isRequired,\n    component: PropTypes.func.isRequired\n}","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Redirect, Route } from 'react-router-dom';\n\nexport const PrivateRoute = ({\n    isAuthenticated,\n    component:Component,\n    ...rest\n}) => {\n    localStorage.setItem('lastpath',rest.location.pathname);\n    return (\n        <Route {...rest}\n            component={\n                (props)=>(\n                    (isAuthenticated)\n                    ? <Component {...props} />\n                    : <Redirect to=\"/login\" />\n                )\n            }\n        \n        />\n    )\n}\n\nPrivateRoute.propTypes={\n    isAuthenticated: PropTypes.bool.isRequired,\n    component: PropTypes.func.isRequired\n}","import React, { useEffect } from 'react';\nimport {\n    BrowserRouter as Router,\n    Switch,   \n    Redirect    \n  } from \"react-router-dom\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport { CalendarScreen } from '../components/calendar/CalendarScreen';\nimport {  LoginScreen } from '../components/auth/LoginScreen';\nimport { startChecking } from '../actions/auth';\nimport { PublicRoute } from './PublicRoute';\nimport { PrivateRoute } from './PrivateRoute';\n\nexport const AppRouter = () => {\n    const dispatch = useDispatch();\n    const {checking,uid} = useSelector(state => state.auth);    \n    useEffect(() => {\n        dispatch(startChecking());\n    }, [dispatch])\n    if(checking){\n        return (<h5>Espere...</h5>);\n    }\n    return (\n        <Router>\n            <div>                \n                <Switch>\n                    <PublicRoute \n                        exact \n                        path=\"/login\" \n                        component={LoginScreen} \n                        isAuthenticated={!!uid}\n                    />\n                    <PrivateRoute \n                        exact \n                        path=\"/\" \n                        component={CalendarScreen} \n                        isAuthenticated={!!uid}\n                    />\n                    <Redirect to=\"/\" />\n                </Switch>\n            </div>\n        </Router>\n    )\n}\n","import React from 'react';\nimport {Provider} from 'react-redux';\nimport { store } from './store/store';\nimport { AppRouter } from './router/AppRouter';\n\nexport const CalendarApp = () => {\n    return (\n        <Provider store={store}>\n            <AppRouter />\n        </Provider>\n    )\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { CalendarApp } from './CalendarApp';\nimport './styles.css';\n\nReactDOM.render(  \n    <CalendarApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}